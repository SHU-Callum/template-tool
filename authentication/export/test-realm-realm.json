{
  "id" : "8001691e-30ec-4c5b-bb3f-c632d06e31fe",
  "realm" : "test-realm",
  "displayName" : "",
  "displayNameHtml" : "",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 5,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "5a3626b4-0865-4c2b-92be-e5266f4deb60",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "8001691e-30ec-4c5b-bb3f-c632d06e31fe",
      "attributes" : { }
    }, {
      "id" : "416f74e5-f5bd-471e-93b0-80f0e5084fd3",
      "name" : "default-roles-test-realm",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "8001691e-30ec-4c5b-bb3f-c632d06e31fe",
      "attributes" : { }
    }, {
      "id" : "74899cda-9b76-46df-8d71-7f73a49953f9",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "8001691e-30ec-4c5b-bb3f-c632d06e31fe",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "881a7d41-9c3c-4aab-a972-ed793305e952",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "f3bccffd-aba5-4629-9638-d8727364e041",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "9f63b694-342b-4a2a-b61d-b3bb397b009e",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "460cd393-9dc8-4b71-a186-5b491dd88f5e",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-clients", "manage-clients", "manage-authorization", "view-users", "view-realm", "query-clients", "manage-realm", "manage-users", "query-realms", "view-identity-providers", "create-client", "manage-events", "manage-identity-providers", "query-groups", "query-users", "view-events", "view-authorization", "impersonation" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "5c7fb885-04fe-4cc1-987d-1fc48ad6d911",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "23ab9b4c-a253-442e-9e87-f28949d940e5",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "3350eced-5713-443b-a9ff-937c3f4bc250",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "9e157629-987e-4250-869c-a056b4cd867a",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "25317965-64e8-4ce2-a384-4b459f7c192b",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "796992b3-1e37-4bd2-aeb7-6b46357b98ae",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "fe65e5f5-ebb2-4f83-b328-cbe2ce790d64",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "4a1a99f4-fae8-4630-8397-7b8d3f800d33",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "cb2b2c38-1a96-4f5e-a5ec-6980c59c1988",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "4eb963ff-4d93-43bd-9f35-4613686cfbd9",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "9a5e5d04-0fbd-4fd8-9e7f-4d8f56eb8a8d",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "15d4f10d-7bf5-4758-a0fd-4a3335d13cd6",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "966ae81f-85d7-497c-806d-db4a3063cfab",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "89c97384-a234-4eeb-b714-080bddc271f0",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      }, {
        "id" : "39741a7d-bfb9-4405-9bd1-8a97a5610bbd",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "test-client" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "1a63c374-d074-4e87-b25c-ed17e74b34ea",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "9a085fb1-e2b8-49b4-9908-ec5355613f6f",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "75fa5f7e-b40b-490d-9df2-06032d458fc7",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "71eb5243-7f1b-4566-bd79-a1aba70f9cd4",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "d8149921-53be-4154-b6fe-5ee663a3743d",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "14c2f32c-1cd6-495d-8399-d571b79b9eaa",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "49b5d968-7807-407e-a0df-f3e7d5450720",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "eaf7768b-e880-40c4-b207-89b38ba66b27",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "220f163d-f048-455c-8302-e13e417e9730",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      }, {
        "id" : "b3b83c60-b3de-40e8-9afc-17ae64a36059",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "416f74e5-f5bd-471e-93b0-80f0e5084fd3",
    "name" : "default-roles-test-realm",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "8001691e-30ec-4c5b-bb3f-c632d06e31fe"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "8fc7b170-702e-4870-a416-977ad8c77368",
    "username" : "testuser",
    "firstName" : "test",
    "lastName" : "testtest",
    "email" : "test@test.test",
    "emailVerified" : false,
    "createdTimestamp" : 1745543447100,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "8ae2d913-4a61-4f03-b705-fbb463858b4e",
      "type" : "password",
      "createdDate" : 1745543487775,
      "secretData" : "{\"value\":\"xnZ/+MFsoxc3iDGXMHvw6E3SV/zdTGc33Xlz60B0jAw=\",\"salt\":\"otyOST6DJ1m5S7KEJznxZw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-test-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "b5d5d946-d15b-4a71-8645-1fcf9ce84378",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/test-realm/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/test-realm/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "918d92c8-80d8-41d8-b57e-2af73631b84e",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/test-realm/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/test-realm/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "20d6de57-0346-48c5-bf1c-004129a7bf19",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "23e4a671-1729-46a5-bc63-d00f8be316cf",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "9a085fb1-e2b8-49b4-9908-ec5355613f6f",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "8f4b571e-bbbe-4352-b958-e02cf450c3dc",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "44cf460d-09f5-4d17-9dfa-468c4349c7ab",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/test-realm/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/test-realm/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "cc630359-c13e-4645-8d68-24311dbb901b",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "42d0033a-e252-4141-b498-776d66e2b81b",
    "clientId" : "test-client",
    "name" : "test-client",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:5173/" ],
    "webOrigins" : [ "http://localhost:8080/", "http://localhost:5173" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1746221270",
      "request.object.signature.alg" : "any",
      "request.object.encryption.alg" : "any",
      "client.introspection.response.allow.jwt.claim.enabled" : "false",
      "standard.token.exchange.enabled" : "false",
      "frontchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "http://localhost:5173/",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.use.lightweight.access.token.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "request.object.required" : "not required",
      "access.token.header.type.rfc9068" : "false",
      "require.pushed.authorization.requests" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "display.on.consent.screen" : "false",
      "request.object.encryption.enc" : "any",
      "token.response.type.bearer.lower-case" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "18ca41b1-357c-4279-8276-29ee9dc066c1",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "508f0592-50e1-4cad-8413-46b0aad0d560",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "702f9e3e-6b5c-447e-8236-98ae565ada28",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "4cf83e41-be63-4ca6-b816-090cc36f18bc",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "0389955e-4038-46d6-a5ae-ca145aab6304",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a825c28b-e7b8-49bc-8760-54879bbbcc43",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "b462d14b-e683-4d7e-a3fb-aff2e46f819e",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "f13c5d6f-39b4-4cd2-a30a-524772471f81",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "32213e20-543b-47a1-8c45-f85bfaeb3836",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "d3c76396-9da4-45e2-aa06-ab115583480a",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f3d4e194-6486-4cd7-97e2-8dc394b6be37",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "64da2d5c-3b40-4cd8-b65f-a4e7b7bafba1",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "bcd28d20-dbea-4d86-88ba-2b27a632f88c",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "7703172d-a1a1-43f2-99da-08ae89dbe948",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6aaf78fd-9174-4b9c-b916-383c203940db",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "fa38f905-4111-4aa5-a83b-ee4d9989e8fa",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "88c1aa5f-b5c9-435d-b15c-4381cf412380",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a2fc9a4b-4656-432a-b5a5-61b564478e0c",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1ab32b23-c076-4085-a167-744437e9ed9b",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5a27ab62-7678-4dd0-9edd-0a7d03b242ea",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "9c4114ad-e57f-47fb-85dc-772d671b6a7c",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "bdd89b31-5fc3-4cd4-97e5-fe86c6a2face",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "89e42832-1025-4319-81a0-90e0ab70309e",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "82fd51fe-bf49-4127-9d5c-0d17bc450c68",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dd306cb6-bbe6-424d-83c0-cccfb380eb3a",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "36205ca3-3870-44de-b7a9-2361e419ab98",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c61eee5a-f44d-4117-9385-f55fd708ce3b",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "172f7eaf-f1a9-40db-a212-6fbf2fe0b789",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "88d5980f-c714-4600-9b61-54433ba3825f",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3d868715-48d4-4975-bbde-b7e79ce18730",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d5cba80e-a78b-44c9-b341-c273a4666f0f",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "05384080-0746-4f28-9003-fc9f7f3010d1",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6d1ad863-caa0-49be-8986-a5ee91368928",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "349ba069-a887-4497-9ce1-16d01d3e00e2",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1ef67854-bf6b-4cd3-a7da-c6b43a6bb77c",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "a01a45d4-ec9a-47ce-aaf3-7501178e78da",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "4f7e4de1-4f7d-437e-b186-447d5d38bbad",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "5b6aa87a-1e9a-42f8-9bc5-10dbc48d2f3d",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9df37893-46f4-4797-990a-fd885d2c59b0",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5d76146e-57a4-453d-9e0e-17a64faa4e30",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "79a82a89-d8dc-4b61-b272-09fb62188465",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "a616bb64-1c70-48fa-8c49-6a112772b863",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "1efe2a70-482a-4032-aac5-ce384d8b322d",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    }, {
      "id" : "1336fdb9-4b37-41a2-b740-4d316948adf4",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "03985ed6-717c-46f0-abe7-9c7046026ae5",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "f49191d9-2de5-40a2-b4c9-495d94a3cffc",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "40af0857-7b8b-4e70-8916-640303fa030e",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "d1ba52b9-9996-43a9-8ae9-90bfeb71f243",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "acr", "email", "roles", "web-origins", "basic", "saml_organization" ],
  "defaultOptionalClientScopes" : [ "organization", "address", "microprofile-jwt", "phone", "offline_access" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "1648f693-4ee0-40bb-81d1-637939b2c4bf",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "d3893384-8510-4130-9369-e16134ebd009",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "162f77b8-9ffc-4ab5-92db-ce78bb9c50b1",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "8dbe017f-df33-404b-b504-d6c5ff395afe",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "463690ac-4b41-4e13-ad88-3d56fc8d62e0",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "220acd6b-fefc-4632-b07a-67a5b3a31dc6",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "539c7a64-c896-4480-877d-5a0849b18f63",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e74e6892-ce07-4d2f-af93-885a0024eb3f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-address-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "76f8c33b-dee8-45c1-90a4-8184fb8a2e37",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAni0IsyN386xLbb6+JkFe8E68x3r+iwEobe0ViTzz2W6BYsXvGbrarG/WeuwCXL8KVB+hukfIQzYTSDr5mIi/sB7Roa5CjpoBxgJSLJ36Z+/LJfkOBm2jhZGP4MC00imeJraIa5xPuws3mpjQxzhJkzadjU3MzC4KqEBBYj3FVaAqwfCy77vdUXC04FQPBrsC+JfJnkSpD45dewakxtjxnVm80zDdBNUqIlUxOn6UidlZMTRnKsQ60UvVk81YPTg5wE45IG6Xba4heXCjOlopQTN8eonuE3N3ADjork4rB5Z8SnsBNcdhdP8bfVXl9erlbazjZB3g75qz+tWFkbhwuQIDAQABAoIBACKrUz9UdFuz9Xpx9uKSrHj2gRkmA7m7AL4LW4+PjREoz/Iy2SPmGTz3bGbX6PKkKuLiZgPa7PGSXiqURpXgz0cOkjsiY1M3PVFFu/YskDCM1hWWH7VX/aHulD8abeesmI36ry8K/UzNehwIB6bK1xGNxH2uwkc0hkB3iP079c886d99cveSKMlCMJ+Wy8/NxTt67Cre2+DqQB0ExXDzMTs6TCGjsIUX+WvmX7gDHZ+UbL+nrzfgpUc2xaWTlNTBBGehABvHA7taldNenQzLvuiGmchIJFwfrl0KYa7r0tGCPEcWVis4ksm0Xg6NhVF+iK23QXHd8XAOa56k4zR2FesCgYEA3ETUfpr5JZrzpu1CLtHKu+LnKACYhpQEIpTSBcvmpSV6mHhqVx+AlYgczuwrnaFM3jziPE27RdhN3J3d0CseYpWwyanIlqla8KUgCRvXTTMosH43DLrt7SfoMCOrnwfLXHWweCDTATkeX7mD8RCS/hbBmmMnt469+jeRZpMXqV8CgYEAt9Wm0EVOk3lOliNXZCOfkkdrL7ZNMalrbwOYeg8C58JZG3+SVE1GkD0ELp25BurvndtWC8EnxJSMSk+DL6Ily8jh5K5LZ/mLOljSBA2VjQmWKoFUG4CQ+KgMvGdJE92zFi8VNDItifVfVZFWuMYoc0VrWWE1sMvyTfnTv7s65OcCgYEAq6U/acFeMX3ELOpqTo3RTASPWU7NjOG/LyuFVlsESuEf3bzIMUgtLVk6Cc1kV5ugiPYs3g08yDq8whSLC3LuZKh9cUjLNQyX/zrN8gsuBcy+Anr4bwUj71DP0OObE3xBbrWPZK0/gI6AKtwoAyyFP1eAWsy14IZtaJTwy1wIbkUCgYAd3viJFQnsiqSLXti/a85s/W/cQ9oNPMM5ObNX+gJ12C2Ue0kyq4/QtilszbIX/qrK0q4LoOouVhjppjvhzI4pq82Q1AVqsrC93Vraz75COZGN/I/HHD/yN5RCNOI5+Sc1bpcacSDXLui7xa76vTArctc7ocEQpkMMCpEusWSjdwKBgQCj9025U8GCkT9EmrCPRArAbN4B6+IOOcqJ69SouUq12n68DSc+nxpt1XqP7TjUItiQVwuhCfH0+dxc2OH2RJvP07gFvlt++Qj/IZxSxisIJ8KI1uuZYOq3XGtRiMjtZgH+EjYPG+UNK7Yp64jVm4wi6SiB5W+2yKbyauB4+ttv9Q==" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICozCCAYsCBgGWalXf0DANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0ZXN0LXJlYWxtMB4XDTI1MDQyNTAwMjM1NFoXDTM1MDQyNTAwMjUzNFowFTETMBEGA1UEAwwKdGVzdC1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ4tCLMjd/OsS22+viZBXvBOvMd6/osBKG3tFYk889lugWLF7xm62qxv1nrsAly/ClQfobpHyEM2E0g6+ZiIv7Ae0aGuQo6aAcYCUiyd+mfvyyX5DgZto4WRj+DAtNIpnia2iGucT7sLN5qY0Mc4SZM2nY1NzMwuCqhAQWI9xVWgKsHwsu+73VFwtOBUDwa7AviXyZ5EqQ+OXXsGpMbY8Z1ZvNMw3QTVKiJVMTp+lInZWTE0ZyrEOtFL1ZPNWD04OcBOOSBul22uIXlwozpaKUEzfHqJ7hNzdwA46K5OKweWfEp7ATXHYXT/G31V5fXq5W2s42Qd4O+as/rVhZG4cLkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAcdBugp5PCZJwkD4bALdEEUqVjfY/z+WurfTTmbM4G1fj4xcvGBJPNoaGnPdeMhOE28gxAlD4ZF/V9t9hQWc9jruP78twXG0bUuTJOfuGMn1SSwcFX5+PqlBKU+OByaHuERvf/oBQwZhvtxSGftwbixg2w9Uuydeg/PCy28Kkz+//LT5Jp4xbbnJbEaAWVi9+qvMesqeedc981pA1sR62dJ+H2wVtxT4R46xrNXDrvZlDLqC/U4FJ9pXBM1FT7jq/zEIjuezVmaOPmw7btfk5w2RhaCxiYFi95NvTTAZ3/HbnaBmxphvCTuDZUcOrYCoCJ9w6pGVmbC1oFxVt/ayxCg==" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "d6eb99ed-0947-4ee4-b809-b3a096ecc22e",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "04eb4ff7-de18-4b57-a3f7-dda0fd441fdb" ],
        "secret" : [ "qs-diYuR14GtQQcKqK7Leg" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "7732c809-f86f-4a50-bb4f-23772d3d21c9",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEA4+UHaWOG7iniAUSpJK9tGWy5rF2oM7gxx0SEjiwMwZfolnoF7blblNNqqFdl+f6HziwH05lpOEW9Frn4ywBFgwGLswvGCyvo2yJvJ8E/yUtCrvZ/Xum87hdp9DbgV+P6vF7tTCcRiqai0rAeKppAXI79qGQZEQ35rTd31oB2qrpT80eP4LQUR/tFTv2fEu+nDW/qwPTN1Xp95iqY6UKDEAKpmHqkv5fUAclxQtBL+I0caYKJaEi+hX1II7CSISTcK6w6yMGnR1wRF1cV+0mBOrtESHeaC9BIH5RmEpk7Y8fxiWnggWrmoDwm/1ue+jbdgeNihbIO1hgH2SHYfOLGLQIDAQABAoIBAAwUjeoGPpbNXY+XpietrOjWHJmIdWwYbXsUpLosl5iDhu7DFSFe2/3tnw/BYkR4O5awOtH6pds3xyg3P3rzTrv9Dvy0uRDKiRNkpePDmLAA7036/xF27m7oitNJPWcrTJVDquyIfaON5b+pWlAD0TmW0tdkRvfid8O41v9l2+R81m6pbnVXlIrPhXP0aVoU6wID8q1j3KgrkVrFh7J2xFGmNbFZe8kxaMDHrINtI4soF4irYbRNfVkRCs/EBVEbECTdyo4xZqTRwDPSKup0mtCnTAs9pgBbNGQwj7htUY7WFwhC65uq78qKYIroigrX0KgGD6y+1EvgAE7P/TEshjkCgYEA84JtWbjm+slD1OtVsw9TCloIPlupBa3F1rh/oL+B5LMMHBRSDKxLGHI1Lzivxkm1k7JGfcnOa0F97pwLPFV5e9ZRQsdxrOAEG4LdiBd1PPSHYT3JXiw4Kbnn/cQbVTx0efrzmtYXdBWUD1csS+Jo/ugI384id/P9RRZKZ8Fs4/cCgYEA75WPaDU1v5BlxVGvfUuDeiUcwMhxgf/leJTE37LIOYYw0QyL2EiQPKb7LoEWuT6Ql9cAVCdObn1ydoEZieKh/83q2tMvfiVJvEfPRoMJFSrIGa4l9nTy/1gxDnqhH8SbZf4IVfwynxbNmDm3lN7HRjitSXlURADimGcmJCf0FfsCgYA8XwGtVOIvGubuSsoccpgr4NZaX28wMTzzVxqNR+10Pc+qxn7xFWYo0WfOJUeu6WdTDsfbN8UtYjdOiPFgK/DKev/6hmfwbDmYeIFj1C0Ex7soqKDb8CqcbbLOf2gnYa2e8FCk+p8l8JOcmggpaCCP0gchNYHmK1+HWVdpEdNlUQKBgAD48G4R2Tf/1Anq/PVbOxthzy4RIjTO3xWQNQRba2igXM5caKzmDn/QhbB4oaj60gdrvfqZdj4IkFBe0cW3f8TUByIAPW8bo6L5/6NfoMfPNqS0Cj9n1hynNPvED6dbWu4dC9edgG8Y3pjBkzcteE2WqU1lCqyD/Gd187et2dXFAoGAQlk/W6JfcjJD+PI0hsqn2N5t5s9+XaTw87IP1EtUoeikjKWu1G7CXJxS8gbpUiyWGz7M7YS+ejf4VRjTZvYP3V90sO0SWDOhxdOYXZxm84hv46ogUFqaBoVLsCLzvlgDr/iLgK5PzFwDWG3DbjMB57QqYQJw+yCvWKrNWmXUIS8=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICozCCAYsCBgGWalXisTANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0ZXN0LXJlYWxtMB4XDTI1MDQyNTAwMjM1NVoXDTM1MDQyNTAwMjUzNVowFTETMBEGA1UEAwwKdGVzdC1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOPlB2ljhu4p4gFEqSSvbRlsuaxdqDO4McdEhI4sDMGX6JZ6Be25W5TTaqhXZfn+h84sB9OZaThFvRa5+MsARYMBi7MLxgsr6NsibyfBP8lLQq72f17pvO4XafQ24Ffj+rxe7UwnEYqmotKwHiqaQFyO/ahkGREN+a03d9aAdqq6U/NHj+C0FEf7RU79nxLvpw1v6sD0zdV6feYqmOlCgxACqZh6pL+X1AHJcULQS/iNHGmCiWhIvoV9SCOwkiEk3CusOsjBp0dcERdXFftJgTq7REh3mgvQSB+UZhKZO2PH8Ylp4IFq5qA8Jv9bnvo23YHjYoWyDtYYB9kh2Hzixi0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAO7uDL66UvQHjd4ku4FWDbEUf6I5rOISgLzqwxmdDFcVB0fYynlXpQqy7YWTyvnj/K274llIk+Fk4Y6Isz2TggdEXbTRz5b0bKInPjI9xCxurdAXvDiSTC38CfazhfiC3WyNWj+suG4zbTGoQdfG42C1NkxQI31A4Hy7AvLfUHGEqQoULHcqnnPxACrMxXQhX6d0OZrmtdEsigivYlGnpbHg9B7o3HI8NkWPPUDIjZQzMt8s9xbp6szJS1KKTM9VbBijQFSLztwkj5dOawguOQJVJbIitsgjVwRfLKBO5wDTUsaKLi5DgK1ZPGFMDhPxYbARyYZ0k45o5gUWYCuq77g==" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "4154fdf8-baac-4ca9-89d3-2562f5ecbfc3",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "1ea6b83b-c8b5-4960-8af4-869e05889c6d" ],
        "secret" : [ "UICcqCyaz_hC9pMrzCAJrDNNUkQ1uRKdgiP-3M7HpxzaTjexBmePGH-k_1eFuU0SUR1hMrkjHgeiPzWKFFSTx6T8E03G_lUkMk2IM6xVS3IZx2v4sG0eyBVEKxmzchNjQfzSc5PVjNtMmRbULd7dBWmW7tQro7pCY9ZQICHvd-4" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "48d01bea-b925-4f48-bad9-5379abd58052",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a5966399-83c6-4ab6-ac46-ddfe2afe66ff",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "993e2864-4922-4868-b461-b1e20e3cefc1",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b22d7c76-b713-4233-a1e0-21c7b3d27b1b",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7ecd3cbb-c05b-47dc-a385-ed01f393bb33",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e944c081-8349-43f1-a23e-5cc7a95bf646",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "dea84e42-cf33-4082-adfc-ff7258dd0613",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7549e6f1-c43d-41b0-9575-722cb40f3924",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "28519c22-03bd-4a26-97fe-382bd38ee0cf",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ca5e1106-27d1-482b-805a-d5b38665385b",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b993b448-e7ae-45d2-b70e-545912610832",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "93bfeebd-4906-492c-98b4-279bbd077370",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0463b958-aa93-43ba-b930-e9f218a03ce1",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b952bf1-9075-4ad4-a873-19b45fb69f7e",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e3746d82-1615-4089-b3c1-c5861b24416c",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b8ef2a3-afea-4eb5-a8d4-edb0b98eed1a",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e3233f42-2ea1-44b7-baf0-71e7f3b5024e",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "602d4701-b350-4308-9041-b82f0f956b63",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f927868e-e558-47d5-8b5e-55f932a1b07c",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1f87ef2e-1b7a-4e25-82e1-1b036e5bc485",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1cd3803e-46b5-458f-8a6a-41ba7a7048a9",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "b50db4cb-becb-45dc-85a5-c659bcf436ae",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "0871d21e-7478-49da-a29a-8935db32bbae",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
    "actionTokenGeneratedByUserLifespan.verify-email" : "",
    "clientOfflineSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.execute-actions" : "",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "saml.signature.algorithm" : "",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "frontendUrl" : "",
    "acr.loa.map" : "{}",
    "shortVerificationUri" : "",
    "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
  },
  "keycloakVersion" : "26.2.1",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}